/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
void TreePreOrder(TreeNode* root,vector<int>*p) {
	if (root == NULL) {
		p->push_back(-1);
		return;
	}          
	p->push_back(root->val);
	TreePreOrder(root->left,p);                                
	TreePreOrder(root->right,p);
}
class Solution {
public:
	bool isSameTree(TreeNode* p, TreeNode* q) {
		vector<int>*p1, *q1;
        p1=new vector<int>;
        q1=new vector<int>;
		TreePreOrder(p, p1);
		TreePreOrder(q, q1);
		int length1, length2,temp1,temp2;
		length1 = p1->size();
		length2 = q1->size();
		if (length1 != length2) {
			return 0;
		}
		else {
			for (int i = 1; i <= length1; i++) {
				temp1 = p1->back();
				p1->pop_back();
				temp2 = q1->back();
				q1->pop_back();
				if (temp1 != temp2) {
					return 0;
				}
			}
		}
		return 1;
	}
};
